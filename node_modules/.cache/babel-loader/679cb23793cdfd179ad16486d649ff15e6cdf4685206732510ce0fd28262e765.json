{"ast":null,"code":"// src/devBrowser.ts\nvar DEV_BROWSER_SSO_JWT_PARAMETER = \"__dev_session\";\nvar DEV_BROWSER_JWT_MARKER = \"__clerk_db_jwt\";\nvar DEV_BROWSER_JWT_MARKER_REGEXP = /__clerk_db_jwt\\[(.*)\\]/;\nfunction setDevBrowserJWTInURL(url, jwt) {\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    hash: true\n  };\n  const resultURL = new URL(url);\n  const jwtFromHash = extractDevBrowserJWTFromURLHash(resultURL);\n  const jwtFromSearch = extractDevBrowserJWTFromURLSearchParams(resultURL);\n  const jwtToSet = jwtFromHash || jwtFromSearch || jwt;\n  if (jwtToSet) {\n    resultURL.searchParams.append(DEV_BROWSER_SSO_JWT_PARAMETER, jwtToSet);\n    resultURL.searchParams.append(DEV_BROWSER_JWT_MARKER, jwtToSet);\n    if (opts.hash) {\n      resultURL.hash = resultURL.hash + \"\".concat(DEV_BROWSER_JWT_MARKER, \"[\").concat(jwtToSet, \"]\");\n    }\n  }\n  return resultURL;\n}\nfunction extractDevBrowserJWTFromHash(hash) {\n  const matches = hash.match(DEV_BROWSER_JWT_MARKER_REGEXP);\n  return matches ? matches[1] : \"\";\n}\nfunction extractDevBrowserJWTFromURLHash(url) {\n  const jwt = extractDevBrowserJWTFromHash(url.hash);\n  url.hash = url.hash.replace(DEV_BROWSER_JWT_MARKER_REGEXP, \"\");\n  if (url.href.endsWith(\"#\")) {\n    url.hash = \"\";\n  }\n  return jwt;\n}\nfunction extractDevBrowserJWTFromURLSearchParams(url) {\n  const jwtFromDevSession = url.searchParams.get(DEV_BROWSER_SSO_JWT_PARAMETER);\n  url.searchParams.delete(DEV_BROWSER_SSO_JWT_PARAMETER);\n  const jwtFromClerkDbJwt = url.searchParams.get(DEV_BROWSER_JWT_MARKER);\n  url.searchParams.delete(DEV_BROWSER_JWT_MARKER);\n  return jwtFromDevSession || jwtFromClerkDbJwt || \"\";\n}\nexport { DEV_BROWSER_SSO_JWT_PARAMETER, DEV_BROWSER_JWT_MARKER, setDevBrowserJWTInURL, extractDevBrowserJWTFromURLHash, extractDevBrowserJWTFromURLSearchParams };","map":{"version":3,"names":["DEV_BROWSER_SSO_JWT_PARAMETER","DEV_BROWSER_JWT_MARKER","DEV_BROWSER_JWT_MARKER_REGEXP","setDevBrowserJWTInURL","url","jwt","opts","arguments","length","undefined","hash","resultURL","URL","jwtFromHash","extractDevBrowserJWTFromURLHash","jwtFromSearch","extractDevBrowserJWTFromURLSearchParams","jwtToSet","searchParams","append","concat","extractDevBrowserJWTFromHash","matches","match","replace","href","endsWith","jwtFromDevSession","get","delete","jwtFromClerkDbJwt"],"sources":["C:\\Users\\shaur\\OneDrive\\Desktop\\AiProject\\my-react-app\\node_modules\\@clerk\\clerk-react\\node_modules\\@clerk\\shared\\src\\devBrowser.ts"],"sourcesContent":["export const DEV_BROWSER_SSO_JWT_PARAMETER = '__dev_session';\nexport const DEV_BROWSER_JWT_MARKER = '__clerk_db_jwt';\nconst DEV_BROWSER_JWT_MARKER_REGEXP = /__clerk_db_jwt\\[(.*)\\]/;\n\n// Sets the dev_browser JWT in the hash or the search\nexport function setDevBrowserJWTInURL(url: URL, jwt: string, opts = { hash: true }): URL {\n  const resultURL = new URL(url);\n\n  const jwtFromHash = extractDevBrowserJWTFromURLHash(resultURL);\n  const jwtFromSearch = extractDevBrowserJWTFromURLSearchParams(resultURL);\n  // Existing jwt takes precedence\n  const jwtToSet = jwtFromHash || jwtFromSearch || jwt;\n\n  if (jwtToSet) {\n    resultURL.searchParams.append(DEV_BROWSER_SSO_JWT_PARAMETER, jwtToSet);\n    resultURL.searchParams.append(DEV_BROWSER_JWT_MARKER, jwtToSet);\n    if (opts.hash) {\n      resultURL.hash = resultURL.hash + `${DEV_BROWSER_JWT_MARKER}[${jwtToSet}]`;\n    }\n  }\n\n  return resultURL;\n}\n\nfunction extractDevBrowserJWTFromHash(hash: string): string {\n  const matches = hash.match(DEV_BROWSER_JWT_MARKER_REGEXP);\n  return matches ? matches[1] : '';\n}\n\n/**\n * Extract & strip existing jwt from hash\n * Side effect: Removes dev browser from the url hash\n **/\nexport function extractDevBrowserJWTFromURLHash(url: URL) {\n  const jwt = extractDevBrowserJWTFromHash(url.hash);\n  url.hash = url.hash.replace(DEV_BROWSER_JWT_MARKER_REGEXP, '');\n  if (url.href.endsWith('#')) {\n    url.hash = '';\n  }\n\n  return jwt;\n}\n\n/**\n * Extract & strip existing jwt from search params\n * Side effect: Removes dev browser from the search params\n **/\nexport function extractDevBrowserJWTFromURLSearchParams(url: URL) {\n  const jwtFromDevSession = url.searchParams.get(DEV_BROWSER_SSO_JWT_PARAMETER);\n  url.searchParams.delete(DEV_BROWSER_SSO_JWT_PARAMETER);\n\n  const jwtFromClerkDbJwt = url.searchParams.get(DEV_BROWSER_JWT_MARKER);\n  url.searchParams.delete(DEV_BROWSER_JWT_MARKER);\n\n  return jwtFromDevSession || jwtFromClerkDbJwt || '';\n}\n"],"mappings":";AAAO,IAAMA,6BAAA,GAAgC;AACtC,IAAMC,sBAAA,GAAyB;AACtC,IAAMC,6BAAA,GAAgC;AAG/B,SAASC,sBAAsBC,GAAA,EAAUC,GAAA,EAAyC;EAAA,IAA5BC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAO;IAAEG,IAAA,EAAM;EAAK;EAC/E,MAAMC,SAAA,GAAY,IAAIC,GAAA,CAAIR,GAAG;EAE7B,MAAMS,WAAA,GAAcC,+BAAA,CAAgCH,SAAS;EAC7D,MAAMI,aAAA,GAAgBC,uCAAA,CAAwCL,SAAS;EAEvE,MAAMM,QAAA,GAAWJ,WAAA,IAAeE,aAAA,IAAiBV,GAAA;EAEjD,IAAIY,QAAA,EAAU;IACZN,SAAA,CAAUO,YAAA,CAAaC,MAAA,CAAOnB,6BAAA,EAA+BiB,QAAQ;IACrEN,SAAA,CAAUO,YAAA,CAAaC,MAAA,CAAOlB,sBAAA,EAAwBgB,QAAQ;IAC9D,IAAIX,IAAA,CAAKI,IAAA,EAAM;MACbC,SAAA,CAAUD,IAAA,GAAOC,SAAA,CAAUD,IAAA,MAAAU,MAAA,CAAUnB,sBAAsB,OAAAmB,MAAA,CAAIH,QAAQ;IACzE;EACF;EAEA,OAAON,SAAA;AACT;AAEA,SAASU,6BAA6BX,IAAA,EAAsB;EAC1D,MAAMY,OAAA,GAAUZ,IAAA,CAAKa,KAAA,CAAMrB,6BAA6B;EACxD,OAAOoB,OAAA,GAAUA,OAAA,CAAQ,CAAC,IAAI;AAChC;AAMO,SAASR,gCAAgCV,GAAA,EAAU;EACxD,MAAMC,GAAA,GAAMgB,4BAAA,CAA6BjB,GAAA,CAAIM,IAAI;EACjDN,GAAA,CAAIM,IAAA,GAAON,GAAA,CAAIM,IAAA,CAAKc,OAAA,CAAQtB,6BAAA,EAA+B,EAAE;EAC7D,IAAIE,GAAA,CAAIqB,IAAA,CAAKC,QAAA,CAAS,GAAG,GAAG;IAC1BtB,GAAA,CAAIM,IAAA,GAAO;EACb;EAEA,OAAOL,GAAA;AACT;AAMO,SAASW,wCAAwCZ,GAAA,EAAU;EAChE,MAAMuB,iBAAA,GAAoBvB,GAAA,CAAIc,YAAA,CAAaU,GAAA,CAAI5B,6BAA6B;EAC5EI,GAAA,CAAIc,YAAA,CAAaW,MAAA,CAAO7B,6BAA6B;EAErD,MAAM8B,iBAAA,GAAoB1B,GAAA,CAAIc,YAAA,CAAaU,GAAA,CAAI3B,sBAAsB;EACrEG,GAAA,CAAIc,YAAA,CAAaW,MAAA,CAAO5B,sBAAsB;EAE9C,OAAO0B,iBAAA,IAAqBG,iBAAA,IAAqB;AACnD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}