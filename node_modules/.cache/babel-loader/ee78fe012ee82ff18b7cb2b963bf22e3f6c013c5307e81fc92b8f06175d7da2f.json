{"ast":null,"code":"import _objectSpread from\"C:/Users/shaur/OneDrive/Desktop/AiProject/my-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useOrganization,useOrganizationList,useUser}from'@clerk/clerk-react';import React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import'./AddBill.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const userMembershipsParams={userMemberships:{infinite:true,keepPreviousData:true}};const orgMembersParams={memberships:{infinite:true,includePublicUserData:true,keepPreviousData:true}};const API_URL=process.env.REACT_APP_API_URL||'http://localhost:3005';const AddBill=()=>{var _memberships$data;const navigate=useNavigate();const{user}=useUser();const{isLoaded:isOrgListLoaded,userMemberships,setActive}=useOrganizationList(userMembershipsParams);const[selectedOrgId,setSelectedOrgId]=useState('');const[showPopup,setShowPopup]=useState(false);const[isSubmitting,setIsSubmitting]=useState(false);const[billData,setBillData]=useState({description:'',amount:'',selectedOrg:'',paidBy:'',date:new Date().toISOString().split('T')[0]});// Get organization details and members for the selected organization\nconst{memberships,isLoaded:isOrgMembershipsLoaded}=useOrganization({memberships:orgMembersParams.memberships,organizationId:selectedOrgId});// Handle organization selection\nconst handleGroupChange=async e=>{const newOrgId=e.target.value;setSelectedOrgId(newOrgId);setBillData(prev=>_objectSpread(_objectSpread({},prev),{},{selectedOrg:newOrgId,paidBy:''}));if(newOrgId){// Set the active organization to trigger member fetch\nawait setActive({organization:newOrgId});}};// Debug logging for member data\nuseEffect(()=>{if(isOrgMembershipsLoaded&&memberships!==null&&memberships!==void 0&&memberships.data){console.log('Current Organization:',selectedOrgId);console.log('Organization Members:',memberships.data);}},[isOrgMembershipsLoaded,memberships===null||memberships===void 0?void 0:memberships.data,selectedOrgId]);const handleSubmit=async e=>{e.preventDefault();setIsSubmitting(true);try{const memberIds=activeMembers.map(member=>member.id);console.log('Submitting bill with data:',{description:billData.description,amount:billData.amount,date:billData.date,organization_id:selectedOrgId,paid_by_user_id:billData.paidBy,split_with_users:memberIds});const response=await fetch(\"\".concat(API_URL,\"/api/bills\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({description:billData.description,amount:parseFloat(billData.amount),date:billData.date,organization_id:selectedOrgId,paid_by_user_id:billData.paidBy,split_with_users:memberIds})});const responseData=await response.json();console.log('Server response:',responseData);if(!response.ok){throw new Error(responseData.message||'Failed to save bill');}// Show success popup\nsetShowPopup(true);// Reset form\nsetBillData({description:'',amount:'',selectedOrg:'',paidBy:'',date:new Date().toISOString().split('T')[0]});setSelectedOrgId('');// Hide popup after 3 seconds\nsetTimeout(()=>{setShowPopup(false);},3000);}catch(error){console.error('Error saving bill:',error);alert(error.message||'Failed to save bill. Please try again.');}finally{setIsSubmitting(false);}};// Show loading state while fetching organizations\nif(!isOrgListLoaded){return/*#__PURE__*/_jsx(\"div\",{className:\"loading-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\",children:\"Loading your groups...\"})});}// Show message if no organizations data is available\nif(!(userMemberships!==null&&userMemberships!==void 0&&userMemberships.data)){return/*#__PURE__*/_jsxs(\"div\",{className:\"add-bill-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Add a bill\"}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"Loading your groups...\"})]});}// Get list of organizations where user is a member\nconst organizations=userMemberships.data.map(membership=>({id:membership.organization.id,name:membership.organization.name,role:membership.role}));// If user has no organizations\nif(organizations.length===0){return/*#__PURE__*/_jsxs(\"div\",{className:\"add-bill-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Add a bill\"}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"You need to be part of a group to add bills.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:\"Please create or join a group first.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-btn\",onClick:()=>navigate('/create-group'),style:{marginTop:'1rem'},children:\"Create New Group\"})]});}// Get active members for the selected organization\nconst activeMembers=(memberships===null||memberships===void 0?void 0:(_memberships$data=memberships.data)===null||_memberships$data===void 0?void 0:_memberships$data.map(member=>{const userData=member.publicUserData;const isCurrentUser=userData.userId===(user===null||user===void 0?void 0:user.id);let displayName;if(isCurrentUser){displayName='You';}else if(userData.firstName&&userData.lastName){displayName=\"\".concat(userData.firstName,\" \").concat(userData.lastName);}else if(userData.firstName){displayName=userData.firstName;}else{displayName=userData.identifier||userData.emailAddress||'Unknown Member';}return{id:userData.userId,name:displayName,role:member.role,isCurrentUser};}))||[];return/*#__PURE__*/_jsxs(\"div\",{className:\"add-bill-container\",children:[showPopup&&/*#__PURE__*/_jsx(\"div\",{className:\"success-popup\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"popup-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"success-icon\",children:\"\\u2713\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Expense added successfully!\"})]})}),/*#__PURE__*/_jsx(\"h1\",{children:\"Add a bill\"}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"Add a new bill to track expenses\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"organization\",children:\"Select Group\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"organization\",value:selectedOrgId,onChange:handleGroupChange,required:true,className:\"select-input\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a group\"}),organizations.map(org=>/*#__PURE__*/_jsxs(\"option\",{value:org.id,children:[org.name,\" (\",org.role,\")\"]},org.id))]})]}),selectedOrgId&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"members-list\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Group Members\"}),!isOrgMembershipsLoaded?/*#__PURE__*/_jsx(\"div\",{className:\"loading-message\",children:\"Loading members...\"}):activeMembers.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:\"No members found in this group\"}):activeMembers.map(member=>/*#__PURE__*/_jsxs(\"div\",{className:\"member-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"member-name\",children:member.name}),/*#__PURE__*/_jsx(\"span\",{className:\"member-role\",children:member.role})]},member.id))]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"paidBy\",children:\"Who paid?\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"paidBy\",value:billData.paidBy,onChange:e=>setBillData(prev=>_objectSpread(_objectSpread({},prev),{},{paidBy:e.target.value})),required:true,className:\"select-input\",disabled:!isOrgMembershipsLoaded||!activeMembers.length,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:!isOrgMembershipsLoaded?'Loading members...':'Select who paid'}),activeMembers.map(member=>/*#__PURE__*/_jsxs(\"option\",{value:member.id,children:[member.name,\" (\",member.role,\")\"]},member.id))]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"description\",children:\"Description\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"description\",value:billData.description,onChange:e=>setBillData(prev=>_objectSpread(_objectSpread({},prev),{},{description:e.target.value})),required:true,className:\"text-input\",placeholder:\"What was this expense for?\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"amount\",children:\"Amount\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"amount\",value:billData.amount,onChange:e=>setBillData(prev=>_objectSpread(_objectSpread({},prev),{},{amount:e.target.value})),required:true,className:\"text-input\",placeholder:\"Amount in \\u20B9\",min:\"0\",step:\"0.01\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"date\",children:\"Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"date\",value:billData.date,onChange:e=>setBillData(prev=>_objectSpread(_objectSpread({},prev),{},{date:e.target.value})),required:true,className:\"date-input\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-btn\",disabled:!isOrgMembershipsLoaded||!selectedOrgId||!activeMembers.length||isSubmitting,children:isSubmitting?'Adding...':'Add Bill'})]})]});};export default AddBill;","map":{"version":3,"names":["useOrganization","useOrganizationList","useUser","React","useEffect","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","userMembershipsParams","userMemberships","infinite","keepPreviousData","orgMembersParams","memberships","includePublicUserData","API_URL","process","env","REACT_APP_API_URL","AddBill","_memberships$data","navigate","user","isLoaded","isOrgListLoaded","setActive","selectedOrgId","setSelectedOrgId","showPopup","setShowPopup","isSubmitting","setIsSubmitting","billData","setBillData","description","amount","selectedOrg","paidBy","date","Date","toISOString","split","isOrgMembershipsLoaded","organizationId","handleGroupChange","e","newOrgId","target","value","prev","_objectSpread","organization","data","console","log","handleSubmit","preventDefault","memberIds","activeMembers","map","member","id","organization_id","paid_by_user_id","split_with_users","response","fetch","concat","method","headers","body","JSON","stringify","parseFloat","responseData","json","ok","Error","message","setTimeout","error","alert","className","children","organizations","membership","name","role","length","onClick","style","marginTop","userData","publicUserData","isCurrentUser","userId","displayName","firstName","lastName","identifier","emailAddress","onSubmit","htmlFor","onChange","required","org","disabled","type","placeholder","min","step"],"sources":["C:/Users/shaur/OneDrive/Desktop/AiProject/my-react-app/src/components/AddBill.jsx"],"sourcesContent":["import { useOrganization, useOrganizationList, useUser } from '@clerk/clerk-react';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AddBill.css';\n\nconst userMembershipsParams = {\n  userMemberships: {\n    infinite: true,\n    keepPreviousData: true,\n  },\n};\n\nconst orgMembersParams = {\n  memberships: {\n    infinite: true,\n    includePublicUserData: true,\n    keepPreviousData: true,\n  },\n};\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3005';\n\nconst AddBill = () => {\n  const navigate = useNavigate();\n  const { user } = useUser();\n  const { isLoaded: isOrgListLoaded, userMemberships, setActive } = useOrganizationList(userMembershipsParams);\n  const [selectedOrgId, setSelectedOrgId] = useState('');\n  const [showPopup, setShowPopup] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  const [billData, setBillData] = useState({\n    description: '',\n    amount: '',\n    selectedOrg: '',\n    paidBy: '',\n    date: new Date().toISOString().split('T')[0],\n  });\n\n  // Get organization details and members for the selected organization\n  const { memberships, isLoaded: isOrgMembershipsLoaded } = useOrganization({\n    memberships: orgMembersParams.memberships,\n    organizationId: selectedOrgId\n  });\n\n  // Handle organization selection\n  const handleGroupChange = async (e) => {\n    const newOrgId = e.target.value;\n    setSelectedOrgId(newOrgId);\n    setBillData(prev => ({ ...prev, selectedOrg: newOrgId, paidBy: '' }));\n    \n    if (newOrgId) {\n      // Set the active organization to trigger member fetch\n      await setActive({ organization: newOrgId });\n    }\n  };\n\n  // Debug logging for member data\n  useEffect(() => {\n    if (isOrgMembershipsLoaded && memberships?.data) {\n      console.log('Current Organization:', selectedOrgId);\n      console.log('Organization Members:', memberships.data);\n    }\n  }, [isOrgMembershipsLoaded, memberships?.data, selectedOrgId]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      const memberIds = activeMembers.map(member => member.id);\n      \n      console.log('Submitting bill with data:', {\n        description: billData.description,\n        amount: billData.amount,\n        date: billData.date,\n        organization_id: selectedOrgId,\n        paid_by_user_id: billData.paidBy,\n        split_with_users: memberIds\n      });\n\n      const response = await fetch(`${API_URL}/api/bills`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          description: billData.description,\n          amount: parseFloat(billData.amount),\n          date: billData.date,\n          organization_id: selectedOrgId,\n          paid_by_user_id: billData.paidBy,\n          split_with_users: memberIds\n        }),\n      });\n\n      const responseData = await response.json();\n      console.log('Server response:', responseData);\n\n      if (!response.ok) {\n        throw new Error(responseData.message || 'Failed to save bill');\n      }\n\n      // Show success popup\n      setShowPopup(true);\n      \n      // Reset form\n      setBillData({\n        description: '',\n        amount: '',\n        selectedOrg: '',\n        paidBy: '',\n        date: new Date().toISOString().split('T')[0],\n      });\n      setSelectedOrgId('');\n\n      // Hide popup after 3 seconds\n      setTimeout(() => {\n        setShowPopup(false);\n      }, 3000);\n\n    } catch (error) {\n      console.error('Error saving bill:', error);\n      alert(error.message || 'Failed to save bill. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Show loading state while fetching organizations\n  if (!isOrgListLoaded) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\">Loading your groups...</div>\n      </div>\n    );\n  }\n\n  // Show message if no organizations data is available\n  if (!userMemberships?.data) {\n    return (\n      <div className=\"add-bill-container\">\n        <h1>Add a bill</h1>\n        <p className=\"subtitle\">Loading your groups...</p>\n      </div>\n    );\n  }\n\n  // Get list of organizations where user is a member\n  const organizations = userMemberships.data.map(membership => ({\n    id: membership.organization.id,\n    name: membership.organization.name,\n    role: membership.role\n  }));\n\n  // If user has no organizations\n  if (organizations.length === 0) {\n    return (\n      <div className=\"add-bill-container\">\n        <h1>Add a bill</h1>\n        <p className=\"subtitle\">You need to be part of a group to add bills.</p>\n        <div className=\"error-message\">Please create or join a group first.</div>\n        <button \n          className=\"action-btn\"\n          onClick={() => navigate('/create-group')}\n          style={{ marginTop: '1rem' }}\n        >\n          Create New Group\n        </button>\n      </div>\n    );\n  }\n\n  // Get active members for the selected organization\n  const activeMembers = memberships?.data\n    ?.map(member => {\n      const userData = member.publicUserData;\n      const isCurrentUser = userData.userId === user?.id;\n      let displayName;\n\n      if (isCurrentUser) {\n        displayName = 'You';\n      } else if (userData.firstName && userData.lastName) {\n        displayName = `${userData.firstName} ${userData.lastName}`;\n      } else if (userData.firstName) {\n        displayName = userData.firstName;\n      } else {\n        displayName = userData.identifier || userData.emailAddress || 'Unknown Member';\n      }\n\n      return {\n        id: userData.userId,\n        name: displayName,\n        role: member.role,\n        isCurrentUser\n      };\n    }) || [];\n\n  return (\n    <div className=\"add-bill-container\">\n      {showPopup && (\n        <div className=\"success-popup\">\n          <div className=\"popup-content\">\n            <span className=\"success-icon\">✓</span>\n            <p>Expense added successfully!</p>\n          </div>\n        </div>\n      )}\n      \n      <h1>Add a bill</h1>\n      <p className=\"subtitle\">Add a new bill to track expenses</p>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"organization\">Select Group</label>\n          <select\n            id=\"organization\"\n            value={selectedOrgId}\n            onChange={handleGroupChange}\n            required\n            className=\"select-input\"\n          >\n            <option value=\"\">Select a group</option>\n            {organizations.map((org) => (\n              <option key={org.id} value={org.id}>\n                {org.name} ({org.role})\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {selectedOrgId && (\n          <>\n            <div className=\"members-list\">\n              <h3>Group Members</h3>\n              {!isOrgMembershipsLoaded ? (\n                <div className=\"loading-message\">Loading members...</div>\n              ) : activeMembers.length === 0 ? (\n                <div className=\"error-message\">No members found in this group</div>\n              ) : (\n                activeMembers.map((member) => (\n                  <div key={member.id} className=\"member-item\">\n                    <span className=\"member-name\">{member.name}</span>\n                    <span className=\"member-role\">{member.role}</span>\n                  </div>\n                ))\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"paidBy\">Who paid?</label>\n              <select\n                id=\"paidBy\"\n                value={billData.paidBy}\n                onChange={(e) => setBillData(prev => ({ ...prev, paidBy: e.target.value }))}\n                required\n                className=\"select-input\"\n                disabled={!isOrgMembershipsLoaded || !activeMembers.length}\n              >\n                <option value=\"\">\n                  {!isOrgMembershipsLoaded \n                    ? 'Loading members...' \n                    : 'Select who paid'}\n                </option>\n                {activeMembers.map((member) => (\n                  <option key={member.id} value={member.id}>\n                    {member.name} ({member.role})\n                  </option>\n                ))}\n              </select>\n            </div>\n          </>\n        )}\n\n        <div className=\"form-group\">\n          <label htmlFor=\"description\">Description</label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            value={billData.description}\n            onChange={(e) => setBillData(prev => ({ ...prev, description: e.target.value }))}\n            required\n            className=\"text-input\"\n            placeholder=\"What was this expense for?\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">Amount</label>\n          <input\n            type=\"number\"\n            id=\"amount\"\n            value={billData.amount}\n            onChange={(e) => setBillData(prev => ({ ...prev, amount: e.target.value }))}\n            required\n            className=\"text-input\"\n            placeholder=\"Amount in ₹\"\n            min=\"0\"\n            step=\"0.01\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"date\">Date</label>\n          <input\n            type=\"date\"\n            id=\"date\"\n            value={billData.date}\n            onChange={(e) => setBillData(prev => ({ ...prev, date: e.target.value }))}\n            required\n            className=\"date-input\"\n          />\n        </div>\n\n        <button \n          type=\"submit\" \n          className=\"submit-btn\"\n          disabled={!isOrgMembershipsLoaded || !selectedOrgId || !activeMembers.length || isSubmitting}\n        >\n          {isSubmitting ? 'Adding...' : 'Add Bill'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddBill;"],"mappings":"2IAAA,OAASA,eAAe,CAAEC,mBAAmB,CAAEC,OAAO,KAAQ,oBAAoB,CAClF,MAAO,CAAAC,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEvB,KAAM,CAAAC,qBAAqB,CAAG,CAC5BC,eAAe,CAAE,CACfC,QAAQ,CAAE,IAAI,CACdC,gBAAgB,CAAE,IACpB,CACF,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAG,CACvBC,WAAW,CAAE,CACXH,QAAQ,CAAE,IAAI,CACdI,qBAAqB,CAAE,IAAI,CAC3BH,gBAAgB,CAAE,IACpB,CACF,CAAC,CAED,KAAM,CAAAI,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAuB,CAExE,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,KAAAC,iBAAA,CACpB,KAAM,CAAAC,QAAQ,CAAGpB,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAEqB,IAAK,CAAC,CAAGzB,OAAO,CAAC,CAAC,CAC1B,KAAM,CAAE0B,QAAQ,CAAEC,eAAe,CAAEf,eAAe,CAAEgB,SAAU,CAAC,CAAG7B,mBAAmB,CAACY,qBAAqB,CAAC,CAC5G,KAAM,CAACkB,aAAa,CAAEC,gBAAgB,CAAC,CAAG3B,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAAC4B,SAAS,CAAEC,YAAY,CAAC,CAAG7B,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAAC8B,YAAY,CAAEC,eAAe,CAAC,CAAG/B,QAAQ,CAAC,KAAK,CAAC,CAEvD,KAAM,CAACgC,QAAQ,CAAEC,WAAW,CAAC,CAAGjC,QAAQ,CAAC,CACvCkC,WAAW,CAAE,EAAE,CACfC,MAAM,CAAE,EAAE,CACVC,WAAW,CAAE,EAAE,CACfC,MAAM,CAAE,EAAE,CACVC,IAAI,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAC7C,CAAC,CAAC,CAEF;AACA,KAAM,CAAE5B,WAAW,CAAEU,QAAQ,CAAEmB,sBAAuB,CAAC,CAAG/C,eAAe,CAAC,CACxEkB,WAAW,CAAED,gBAAgB,CAACC,WAAW,CACzC8B,cAAc,CAAEjB,aAClB,CAAC,CAAC,CAEF;AACA,KAAM,CAAAkB,iBAAiB,CAAG,KAAO,CAAAC,CAAC,EAAK,CACrC,KAAM,CAAAC,QAAQ,CAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAC/BrB,gBAAgB,CAACmB,QAAQ,CAAC,CAC1Bb,WAAW,CAACgB,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAEb,WAAW,CAAEU,QAAQ,CAAET,MAAM,CAAE,EAAE,EAAG,CAAC,CAErE,GAAIS,QAAQ,CAAE,CACZ;AACA,KAAM,CAAArB,SAAS,CAAC,CAAE0B,YAAY,CAAEL,QAAS,CAAC,CAAC,CAC7C,CACF,CAAC,CAED;AACA/C,SAAS,CAAC,IAAM,CACd,GAAI2C,sBAAsB,EAAI7B,WAAW,SAAXA,WAAW,WAAXA,WAAW,CAAEuC,IAAI,CAAE,CAC/CC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAE5B,aAAa,CAAC,CACnD2B,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEzC,WAAW,CAACuC,IAAI,CAAC,CACxD,CACF,CAAC,CAAE,CAACV,sBAAsB,CAAE7B,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEuC,IAAI,CAAE1B,aAAa,CAAC,CAAC,CAE9D,KAAM,CAAA6B,YAAY,CAAG,KAAO,CAAAV,CAAC,EAAK,CAChCA,CAAC,CAACW,cAAc,CAAC,CAAC,CAClBzB,eAAe,CAAC,IAAI,CAAC,CAErB,GAAI,CACF,KAAM,CAAA0B,SAAS,CAAGC,aAAa,CAACC,GAAG,CAACC,MAAM,EAAIA,MAAM,CAACC,EAAE,CAAC,CAExDR,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAE,CACxCpB,WAAW,CAAEF,QAAQ,CAACE,WAAW,CACjCC,MAAM,CAAEH,QAAQ,CAACG,MAAM,CACvBG,IAAI,CAAEN,QAAQ,CAACM,IAAI,CACnBwB,eAAe,CAAEpC,aAAa,CAC9BqC,eAAe,CAAE/B,QAAQ,CAACK,MAAM,CAChC2B,gBAAgB,CAAEP,SACpB,CAAC,CAAC,CAEF,KAAM,CAAAQ,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIpD,OAAO,eAAc,CACnDqD,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBtC,WAAW,CAAEF,QAAQ,CAACE,WAAW,CACjCC,MAAM,CAAEsC,UAAU,CAACzC,QAAQ,CAACG,MAAM,CAAC,CACnCG,IAAI,CAAEN,QAAQ,CAACM,IAAI,CACnBwB,eAAe,CAAEpC,aAAa,CAC9BqC,eAAe,CAAE/B,QAAQ,CAACK,MAAM,CAChC2B,gBAAgB,CAAEP,SACpB,CAAC,CACH,CAAC,CAAC,CAEF,KAAM,CAAAiB,YAAY,CAAG,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAC1CtB,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEoB,YAAY,CAAC,CAE7C,GAAI,CAACT,QAAQ,CAACW,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAACH,YAAY,CAACI,OAAO,EAAI,qBAAqB,CAAC,CAChE,CAEA;AACAjD,YAAY,CAAC,IAAI,CAAC,CAElB;AACAI,WAAW,CAAC,CACVC,WAAW,CAAE,EAAE,CACfC,MAAM,CAAE,EAAE,CACVC,WAAW,CAAE,EAAE,CACfC,MAAM,CAAE,EAAE,CACVC,IAAI,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAC7C,CAAC,CAAC,CACFd,gBAAgB,CAAC,EAAE,CAAC,CAEpB;AACAoD,UAAU,CAAC,IAAM,CACflD,YAAY,CAAC,KAAK,CAAC,CACrB,CAAC,CAAE,IAAI,CAAC,CAEV,CAAE,MAAOmD,KAAK,CAAE,CACd3B,OAAO,CAAC2B,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC1CC,KAAK,CAACD,KAAK,CAACF,OAAO,EAAI,wCAAwC,CAAC,CAClE,CAAC,OAAS,CACR/C,eAAe,CAAC,KAAK,CAAC,CACxB,CACF,CAAC,CAED;AACA,GAAI,CAACP,eAAe,CAAE,CACpB,mBACErB,IAAA,QAAK+E,SAAS,CAAC,mBAAmB,CAAAC,QAAA,cAChChF,IAAA,QAAK+E,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,wBAAsB,CAAK,CAAC,CAC1D,CAAC,CAEV,CAEA;AACA,GAAI,EAAC1E,eAAe,SAAfA,eAAe,WAAfA,eAAe,CAAE2C,IAAI,EAAE,CAC1B,mBACE/C,KAAA,QAAK6E,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjChF,IAAA,OAAAgF,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBhF,IAAA,MAAG+E,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAC,wBAAsB,CAAG,CAAC,EAC/C,CAAC,CAEV,CAEA;AACA,KAAM,CAAAC,aAAa,CAAG3E,eAAe,CAAC2C,IAAI,CAACO,GAAG,CAAC0B,UAAU,GAAK,CAC5DxB,EAAE,CAAEwB,UAAU,CAAClC,YAAY,CAACU,EAAE,CAC9ByB,IAAI,CAAED,UAAU,CAAClC,YAAY,CAACmC,IAAI,CAClCC,IAAI,CAAEF,UAAU,CAACE,IACnB,CAAC,CAAC,CAAC,CAEH;AACA,GAAIH,aAAa,CAACI,MAAM,GAAK,CAAC,CAAE,CAC9B,mBACEnF,KAAA,QAAK6E,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjChF,IAAA,OAAAgF,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBhF,IAAA,MAAG+E,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAC,8CAA4C,CAAG,CAAC,cACxEhF,IAAA,QAAK+E,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,sCAAoC,CAAK,CAAC,cACzEhF,IAAA,WACE+E,SAAS,CAAC,YAAY,CACtBO,OAAO,CAAEA,CAAA,GAAMpE,QAAQ,CAAC,eAAe,CAAE,CACzCqE,KAAK,CAAE,CAAEC,SAAS,CAAE,MAAO,CAAE,CAAAR,QAAA,CAC9B,kBAED,CAAQ,CAAC,EACN,CAAC,CAEV,CAEA;AACA,KAAM,CAAAzB,aAAa,CAAG,CAAA7C,WAAW,SAAXA,WAAW,kBAAAO,iBAAA,CAAXP,WAAW,CAAEuC,IAAI,UAAAhC,iBAAA,iBAAjBA,iBAAA,CAClBuC,GAAG,CAACC,MAAM,EAAI,CACd,KAAM,CAAAgC,QAAQ,CAAGhC,MAAM,CAACiC,cAAc,CACtC,KAAM,CAAAC,aAAa,CAAGF,QAAQ,CAACG,MAAM,IAAKzE,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEuC,EAAE,EAClD,GAAI,CAAAmC,WAAW,CAEf,GAAIF,aAAa,CAAE,CACjBE,WAAW,CAAG,KAAK,CACrB,CAAC,IAAM,IAAIJ,QAAQ,CAACK,SAAS,EAAIL,QAAQ,CAACM,QAAQ,CAAE,CAClDF,WAAW,IAAA7B,MAAA,CAAMyB,QAAQ,CAACK,SAAS,MAAA9B,MAAA,CAAIyB,QAAQ,CAACM,QAAQ,CAAE,CAC5D,CAAC,IAAM,IAAIN,QAAQ,CAACK,SAAS,CAAE,CAC7BD,WAAW,CAAGJ,QAAQ,CAACK,SAAS,CAClC,CAAC,IAAM,CACLD,WAAW,CAAGJ,QAAQ,CAACO,UAAU,EAAIP,QAAQ,CAACQ,YAAY,EAAI,gBAAgB,CAChF,CAEA,MAAO,CACLvC,EAAE,CAAE+B,QAAQ,CAACG,MAAM,CACnBT,IAAI,CAAEU,WAAW,CACjBT,IAAI,CAAE3B,MAAM,CAAC2B,IAAI,CACjBO,aACF,CAAC,CACH,CAAC,CAAC,GAAI,EAAE,CAEV,mBACEzF,KAAA,QAAK6E,SAAS,CAAC,oBAAoB,CAAAC,QAAA,EAChCvD,SAAS,eACRzB,IAAA,QAAK+E,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5B9E,KAAA,QAAK6E,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BhF,IAAA,SAAM+E,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,QAAC,CAAM,CAAC,cACvChF,IAAA,MAAAgF,QAAA,CAAG,6BAA2B,CAAG,CAAC,EAC/B,CAAC,CACH,CACN,cAEDhF,IAAA,OAAAgF,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBhF,IAAA,MAAG+E,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAC,kCAAgC,CAAG,CAAC,cAE5D9E,KAAA,SAAMgG,QAAQ,CAAE9C,YAAa,CAAA4B,QAAA,eAC3B9E,KAAA,QAAK6E,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBhF,IAAA,UAAOmG,OAAO,CAAC,cAAc,CAAAnB,QAAA,CAAC,cAAY,CAAO,CAAC,cAClD9E,KAAA,WACEwD,EAAE,CAAC,cAAc,CACjBb,KAAK,CAAEtB,aAAc,CACrB6E,QAAQ,CAAE3D,iBAAkB,CAC5B4D,QAAQ,MACRtB,SAAS,CAAC,cAAc,CAAAC,QAAA,eAExBhF,IAAA,WAAQ6C,KAAK,CAAC,EAAE,CAAAmC,QAAA,CAAC,gBAAc,CAAQ,CAAC,CACvCC,aAAa,CAACzB,GAAG,CAAE8C,GAAG,eACrBpG,KAAA,WAAqB2C,KAAK,CAAEyD,GAAG,CAAC5C,EAAG,CAAAsB,QAAA,EAChCsB,GAAG,CAACnB,IAAI,CAAC,IAAE,CAACmB,GAAG,CAAClB,IAAI,CAAC,GACxB,GAFakB,GAAG,CAAC5C,EAET,CACT,CAAC,EACI,CAAC,EACN,CAAC,CAELnC,aAAa,eACZrB,KAAA,CAAAE,SAAA,EAAA4E,QAAA,eACE9E,KAAA,QAAK6E,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BhF,IAAA,OAAAgF,QAAA,CAAI,eAAa,CAAI,CAAC,CACrB,CAACzC,sBAAsB,cACtBvC,IAAA,QAAK+E,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,oBAAkB,CAAK,CAAC,CACvDzB,aAAa,CAAC8B,MAAM,GAAK,CAAC,cAC5BrF,IAAA,QAAK+E,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,gCAA8B,CAAK,CAAC,CAEnEzB,aAAa,CAACC,GAAG,CAAEC,MAAM,eACvBvD,KAAA,QAAqB6E,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1ChF,IAAA,SAAM+E,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAEvB,MAAM,CAAC0B,IAAI,CAAO,CAAC,cAClDnF,IAAA,SAAM+E,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAEvB,MAAM,CAAC2B,IAAI,CAAO,CAAC,GAF1C3B,MAAM,CAACC,EAGZ,CACN,CACF,EACE,CAAC,cAENxD,KAAA,QAAK6E,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBhF,IAAA,UAAOmG,OAAO,CAAC,QAAQ,CAAAnB,QAAA,CAAC,WAAS,CAAO,CAAC,cACzC9E,KAAA,WACEwD,EAAE,CAAC,QAAQ,CACXb,KAAK,CAAEhB,QAAQ,CAACK,MAAO,CACvBkE,QAAQ,CAAG1D,CAAC,EAAKZ,WAAW,CAACgB,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAEZ,MAAM,CAAEQ,CAAC,CAACE,MAAM,CAACC,KAAK,EAAG,CAAE,CAC5EwD,QAAQ,MACRtB,SAAS,CAAC,cAAc,CACxBwB,QAAQ,CAAE,CAAChE,sBAAsB,EAAI,CAACgB,aAAa,CAAC8B,MAAO,CAAAL,QAAA,eAE3DhF,IAAA,WAAQ6C,KAAK,CAAC,EAAE,CAAAmC,QAAA,CACb,CAACzC,sBAAsB,CACpB,oBAAoB,CACpB,iBAAiB,CACf,CAAC,CACRgB,aAAa,CAACC,GAAG,CAAEC,MAAM,eACxBvD,KAAA,WAAwB2C,KAAK,CAAEY,MAAM,CAACC,EAAG,CAAAsB,QAAA,EACtCvB,MAAM,CAAC0B,IAAI,CAAC,IAAE,CAAC1B,MAAM,CAAC2B,IAAI,CAAC,GAC9B,GAFa3B,MAAM,CAACC,EAEZ,CACT,CAAC,EACI,CAAC,EACN,CAAC,EACN,CACH,cAEDxD,KAAA,QAAK6E,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBhF,IAAA,UAAOmG,OAAO,CAAC,aAAa,CAAAnB,QAAA,CAAC,aAAW,CAAO,CAAC,cAChDhF,IAAA,UACEwG,IAAI,CAAC,MAAM,CACX9C,EAAE,CAAC,aAAa,CAChBb,KAAK,CAAEhB,QAAQ,CAACE,WAAY,CAC5BqE,QAAQ,CAAG1D,CAAC,EAAKZ,WAAW,CAACgB,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAEf,WAAW,CAAEW,CAAC,CAACE,MAAM,CAACC,KAAK,EAAG,CAAE,CACjFwD,QAAQ,MACRtB,SAAS,CAAC,YAAY,CACtB0B,WAAW,CAAC,4BAA4B,CACzC,CAAC,EACC,CAAC,cAENvG,KAAA,QAAK6E,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBhF,IAAA,UAAOmG,OAAO,CAAC,QAAQ,CAAAnB,QAAA,CAAC,QAAM,CAAO,CAAC,cACtChF,IAAA,UACEwG,IAAI,CAAC,QAAQ,CACb9C,EAAE,CAAC,QAAQ,CACXb,KAAK,CAAEhB,QAAQ,CAACG,MAAO,CACvBoE,QAAQ,CAAG1D,CAAC,EAAKZ,WAAW,CAACgB,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAEd,MAAM,CAAEU,CAAC,CAACE,MAAM,CAACC,KAAK,EAAG,CAAE,CAC5EwD,QAAQ,MACRtB,SAAS,CAAC,YAAY,CACtB0B,WAAW,CAAC,kBAAa,CACzBC,GAAG,CAAC,GAAG,CACPC,IAAI,CAAC,MAAM,CACZ,CAAC,EACC,CAAC,cAENzG,KAAA,QAAK6E,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBhF,IAAA,UAAOmG,OAAO,CAAC,MAAM,CAAAnB,QAAA,CAAC,MAAI,CAAO,CAAC,cAClChF,IAAA,UACEwG,IAAI,CAAC,MAAM,CACX9C,EAAE,CAAC,MAAM,CACTb,KAAK,CAAEhB,QAAQ,CAACM,IAAK,CACrBiE,QAAQ,CAAG1D,CAAC,EAAKZ,WAAW,CAACgB,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAEX,IAAI,CAAEO,CAAC,CAACE,MAAM,CAACC,KAAK,EAAG,CAAE,CAC1EwD,QAAQ,MACRtB,SAAS,CAAC,YAAY,CACvB,CAAC,EACC,CAAC,cAEN/E,IAAA,WACEwG,IAAI,CAAC,QAAQ,CACbzB,SAAS,CAAC,YAAY,CACtBwB,QAAQ,CAAE,CAAChE,sBAAsB,EAAI,CAAChB,aAAa,EAAI,CAACgC,aAAa,CAAC8B,MAAM,EAAI1D,YAAa,CAAAqD,QAAA,CAE5FrD,YAAY,CAAG,WAAW,CAAG,UAAU,CAClC,CAAC,EACL,CAAC,EACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAX,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}