{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaur\\\\OneDrive\\\\Desktop\\\\AiProject\\\\my-react-app\\\\src\\\\components\\\\Navigation.jsx\",\n  _s = $RefreshSig$();\nimport { useUser } from '@clerk/clerk-react';\nimport LanguageIcon from '@mui/icons-material/Language';\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './Navigation.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Navigation = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    isSignedIn\n  } = useUser();\n  const [showLanguageMenu, setShowLanguageMenu] = useState(false);\n  const languages = [{\n    code: 'en',\n    name: 'English'\n  }, {\n    code: 'hi',\n    name: 'हिंदी'\n  }, {\n    code: 'ta',\n    name: 'தமிழ்'\n  }, {\n    code: 'te',\n    name: 'తెలుగు'\n  }, {\n    code: 'ml',\n    name: 'മലയാളം'\n  }, {\n    code: 'kn',\n    name: 'ಕನ್ನಡ'\n  }, {\n    code: 'bn',\n    name: 'বাংলা'\n  }, {\n    code: 'gu',\n    name: 'ગુજરાતી'\n  }, {\n    code: 'mr',\n    name: 'मराठी'\n  }, {\n    code: 'pa',\n    name: 'ਪੰਜਾਬੀ'\n  }];\n  const [selectedLanguage, setSelectedLanguage] = useState('en');\n  const handleLanguageSelect = langCode => {\n    setSelectedLanguage(langCode);\n    setShowLanguageMenu(false);\n    // Here you would typically update your app's language context/state\n    console.log(`Language changed to: ${langCode}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-left\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"nav-logo\",\n        children: \"Settlr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-right\",\n      children: isSignedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/expenses\",\n          className: \"nav-link\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"language-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"language-btn\",\n            onClick: () => setShowLanguageMenu(!showLanguageMenu),\n            children: /*#__PURE__*/_jsxDEV(LanguageIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), showLanguageMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"language-menu\",\n            children: languages.map(lang => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `language-option ${selectedLanguage === lang.code ? 'selected' : ''}`,\n              onClick: () => handleLanguageSelect(lang.code),\n              children: lang.name\n            }, lang.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-btn\",\n        onClick: () => navigate('/sign-in'),\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Navigation, \"Uw3Cb9fcDqsuvEeeFwNVNcy4hVU=\", false, function () {\n  return [useNavigate, useUser];\n});\n_c = Navigation;\nexport default Navigation;\nvar _c;\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"names":["useUser","LanguageIcon","React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Navigation","_s","navigate","isSignedIn","showLanguageMenu","setShowLanguageMenu","languages","code","name","selectedLanguage","setSelectedLanguage","handleLanguageSelect","langCode","console","log","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","lang","_c","$RefreshReg$"],"sources":["C:/Users/shaur/OneDrive/Desktop/AiProject/my-react-app/src/components/Navigation.jsx"],"sourcesContent":["import { useUser } from '@clerk/clerk-react';\nimport LanguageIcon from '@mui/icons-material/Language';\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './Navigation.css';\n\nconst Navigation = () => {\n  const navigate = useNavigate();\n  const { isSignedIn } = useUser();\n  const [showLanguageMenu, setShowLanguageMenu] = useState(false);\n\n  const languages = [\n    { code: 'en', name: 'English' },\n    { code: 'hi', name: 'हिंदी' },\n    { code: 'ta', name: 'தமிழ்' },\n    { code: 'te', name: 'తెలుగు' },\n    { code: 'ml', name: 'മലയാളം' },\n    { code: 'kn', name: 'ಕನ್ನಡ' },\n    { code: 'bn', name: 'বাংলা' },\n    { code: 'gu', name: 'ગુજરાતી' },\n    { code: 'mr', name: 'मराठी' },\n    { code: 'pa', name: 'ਪੰਜਾਬੀ' }\n  ];\n\n  const [selectedLanguage, setSelectedLanguage] = useState('en');\n\n  const handleLanguageSelect = (langCode) => {\n    setSelectedLanguage(langCode);\n    setShowLanguageMenu(false);\n    // Here you would typically update your app's language context/state\n    console.log(`Language changed to: ${langCode}`);\n  };\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"nav-left\">\n        <Link to=\"/\" className=\"nav-logo\">\n          Settlr\n        </Link>\n      </div>\n\n      <div className=\"nav-right\">\n        {isSignedIn ? (\n          <>\n            <Link to=\"/expenses\" className=\"nav-link\">\n              Dashboard\n            </Link>\n            <div className=\"language-selector\">\n              <button \n                className=\"language-btn\"\n                onClick={() => setShowLanguageMenu(!showLanguageMenu)}\n              >\n                <LanguageIcon />\n              </button>\n              {showLanguageMenu && (\n                <div className=\"language-menu\">\n                  {languages.map((lang) => (\n                    <button\n                      key={lang.code}\n                      className={`language-option ${selectedLanguage === lang.code ? 'selected' : ''}`}\n                      onClick={() => handleLanguageSelect(lang.code)}\n                    >\n                      {lang.name}\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n          </>\n        ) : (\n          <button \n            className=\"login-btn\"\n            onClick={() => navigate('/sign-in')}\n          >\n            Sign In\n          </button>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation; "],"mappings":";;AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAC5C,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEQ;EAAW,CAAC,GAAGb,OAAO,CAAC,CAAC;EAChC,MAAM,CAACc,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAMa,SAAS,GAAG,CAChB;IAAEC,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAU,CAAC,EAC/B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAQ,CAAC,EAC7B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAQ,CAAC,EAC7B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAS,CAAC,EAC9B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAS,CAAC,EAC9B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAQ,CAAC,EAC7B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAQ,CAAC,EAC7B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAU,CAAC,EAC/B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAQ,CAAC,EAC7B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAS,CAAC,CAC/B;EAED,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAMkB,oBAAoB,GAAIC,QAAQ,IAAK;IACzCF,mBAAmB,CAACE,QAAQ,CAAC;IAC7BP,mBAAmB,CAAC,KAAK,CAAC;IAC1B;IACAQ,OAAO,CAACC,GAAG,CAAC,wBAAwBF,QAAQ,EAAE,CAAC;EACjD,CAAC;EAED,oBACEf,OAAA;IAAKkB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBnB,OAAA;MAAKkB,SAAS,EAAC,UAAU;MAAAC,QAAA,eACvBnB,OAAA,CAACH,IAAI;QAACuB,EAAE,EAAC,GAAG;QAACF,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAC;MAElC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAENxB,OAAA;MAAKkB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBb,UAAU,gBACTN,OAAA,CAAAE,SAAA;QAAAiB,QAAA,gBACEnB,OAAA,CAACH,IAAI;UAACuB,EAAE,EAAC,WAAW;UAACF,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAC;QAE1C;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACPxB,OAAA;UAAKkB,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChCnB,OAAA;YACEkB,SAAS,EAAC,cAAc;YACxBO,OAAO,EAAEA,CAAA,KAAMjB,mBAAmB,CAAC,CAACD,gBAAgB,CAAE;YAAAY,QAAA,eAEtDnB,OAAA,CAACN,YAAY;cAAA2B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,EACRjB,gBAAgB,iBACfP,OAAA;YAAKkB,SAAS,EAAC,eAAe;YAAAC,QAAA,EAC3BV,SAAS,CAACiB,GAAG,CAAEC,IAAI,iBAClB3B,OAAA;cAEEkB,SAAS,EAAE,mBAAmBN,gBAAgB,KAAKe,IAAI,CAACjB,IAAI,GAAG,UAAU,GAAG,EAAE,EAAG;cACjFe,OAAO,EAAEA,CAAA,KAAMX,oBAAoB,CAACa,IAAI,CAACjB,IAAI,CAAE;cAAAS,QAAA,EAE9CQ,IAAI,CAAChB;YAAI,GAJLgB,IAAI,CAACjB,IAAI;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKR,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA,eACN,CAAC,gBAEHxB,OAAA;QACEkB,SAAS,EAAC,WAAW;QACrBO,OAAO,EAAEA,CAAA,KAAMpB,QAAQ,CAAC,UAAU,CAAE;QAAAc,QAAA,EACrC;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IACT;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CA1EID,UAAU;EAAA,QACGL,WAAW,EACLL,OAAO;AAAA;AAAAmC,EAAA,GAF1BzB,UAAU;AA4EhB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}