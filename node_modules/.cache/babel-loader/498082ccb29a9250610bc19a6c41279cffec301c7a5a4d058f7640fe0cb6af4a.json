{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaur\\\\OneDrive\\\\Desktop\\\\AiProject\\\\my-react-app\\\\src\\\\components\\\\AddBill.jsx\",\n  _s = $RefreshSig$();\nimport { useOrganization, useOrganizationList, useUser } from '@clerk/clerk-react';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AddBill.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst userMembershipsParams = {\n  userMemberships: {\n    infinite: true,\n    keepPreviousData: true\n  }\n};\nconst orgMembersParams = {\n  memberships: {\n    infinite: true,\n    includePublicUserData: true,\n    keepPreviousData: true\n  }\n};\nconst AddBill = () => {\n  _s();\n  var _memberships$data;\n  const navigate = useNavigate();\n  const {\n    user\n  } = useUser();\n  const {\n    isLoaded: isOrgListLoaded,\n    userMemberships,\n    setActive\n  } = useOrganizationList(userMembershipsParams);\n  const [selectedOrgId, setSelectedOrgId] = useState('');\n  const [showPopup, setShowPopup] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [billData, setBillData] = useState({\n    description: '',\n    amount: '',\n    selectedOrg: '',\n    paidBy: '',\n    date: new Date().toISOString().split('T')[0]\n  });\n\n  // Get organization details and members for the selected organization\n  const {\n    memberships,\n    isLoaded: isOrgMembershipsLoaded\n  } = useOrganization({\n    memberships: orgMembersParams.memberships,\n    organizationId: selectedOrgId\n  });\n\n  // Handle organization selection\n  const handleGroupChange = async e => {\n    const newOrgId = e.target.value;\n    setSelectedOrgId(newOrgId);\n    setBillData(prev => ({\n      ...prev,\n      selectedOrg: newOrgId,\n      paidBy: ''\n    }));\n    if (newOrgId) {\n      // Set the active organization to trigger member fetch\n      await setActive({\n        organization: newOrgId\n      });\n    }\n  };\n\n  // Debug logging for member data\n  useEffect(() => {\n    if (isOrgMembershipsLoaded && memberships !== null && memberships !== void 0 && memberships.data) {\n      console.log('Current Organization:', selectedOrgId);\n      console.log('Organization Members:', memberships.data);\n    }\n  }, [isOrgMembershipsLoaded, memberships === null || memberships === void 0 ? void 0 : memberships.data, selectedOrgId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    try {\n      // Format members data for split\n      const splitWithUsers = {\n        members: activeMembers.map(member => ({\n          user_id: member.id,\n          name: member.name,\n          share_amount: parseFloat(billData.amount) / activeMembers.length,\n          share_percentage: 100 / activeMembers.length,\n          status: \"pending\"\n        })),\n        total_members: activeMembers.length\n      };\n\n      // Debug log\n      console.log('Submitting bill with data:', {\n        description: billData.description,\n        amount: billData.amount,\n        date: billData.date,\n        organization_id: selectedOrgId,\n        paid_by_user_id: billData.paidBy,\n        split_with_users: splitWithUsers,\n        split_type: 'equal',\n        currency: 'USD'\n      });\n      const response = await fetch('http://localhost:3001/api/bills', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          description: billData.description,\n          amount: parseFloat(billData.amount),\n          date: billData.date,\n          organization_id: selectedOrgId,\n          paid_by_user_id: billData.paidBy,\n          split_with_users: splitWithUsers,\n          split_type: 'equal',\n          currency: 'USD'\n        })\n      });\n      const responseData = await response.json();\n      console.log('Server response:', responseData);\n      if (!response.ok) {\n        throw new Error(responseData.message || 'Failed to save bill');\n      }\n\n      // Show success popup\n      setShowPopup(true);\n\n      // Reset form\n      setBillData({\n        description: '',\n        amount: '',\n        selectedOrg: '',\n        paidBy: '',\n        date: new Date().toISOString().split('T')[0]\n      });\n      setSelectedOrgId('');\n\n      // Hide popup after 3 seconds\n      setTimeout(() => {\n        setShowPopup(false);\n      }, 3000);\n    } catch (error) {\n      console.error('Error saving bill:', error);\n      alert(error.message || 'Failed to save bill. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Show loading state while fetching organizations\n  if (!isOrgListLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"Loading your groups...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show message if no organizations data is available\n  if (!(userMemberships !== null && userMemberships !== void 0 && userMemberships.data)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-bill-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add a bill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subtitle\",\n        children: \"Loading your groups...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Get list of organizations where user is a member\n  const organizations = userMemberships.data.map(membership => ({\n    id: membership.organization.id,\n    name: membership.organization.name,\n    role: membership.role\n  }));\n\n  // If user has no organizations\n  if (organizations.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-bill-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add a bill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subtitle\",\n        children: \"You need to be part of a group to add bills.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: \"Please create or join a group first.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-btn\",\n        onClick: () => navigate('/create-group'),\n        style: {\n          marginTop: '1rem'\n        },\n        children: \"Create New Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Get active members for the selected organization\n  const activeMembers = (memberships === null || memberships === void 0 ? void 0 : (_memberships$data = memberships.data) === null || _memberships$data === void 0 ? void 0 : _memberships$data.map(member => {\n    const userData = member.publicUserData;\n    const isCurrentUser = userData.userId === (user === null || user === void 0 ? void 0 : user.id);\n    let displayName;\n    if (isCurrentUser) {\n      displayName = 'You';\n    } else if (userData.firstName && userData.lastName) {\n      displayName = `${userData.firstName} ${userData.lastName}`;\n    } else if (userData.firstName) {\n      displayName = userData.firstName;\n    } else {\n      displayName = userData.identifier || userData.emailAddress || 'Unknown Member';\n    }\n    return {\n      id: userData.userId,\n      name: displayName,\n      role: member.role,\n      isCurrentUser\n    };\n  })) || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-bill-container\",\n    children: [showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"success-icon\",\n          children: \"\\u2713\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Expense added successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add a bill\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"subtitle\",\n      children: \"Add a new bill to track expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"organization\",\n          children: \"Select Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"organization\",\n          value: selectedOrgId,\n          onChange: handleGroupChange,\n          required: true,\n          className: \"select-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), organizations.map(org => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: org.id,\n            children: [org.name, \" (\", org.role, \")\"]\n          }, org.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), selectedOrgId && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"members-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Group Members\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), !isOrgMembershipsLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-message\",\n            children: \"Loading members...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this) : activeMembers.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: \"No members found in this group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this) : activeMembers.map(member => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"member-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"member-name\",\n              children: member.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"member-role\",\n              children: member.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 21\n            }, this)]\n          }, member.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"paidBy\",\n            children: \"Who paid?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"paidBy\",\n            value: billData.paidBy,\n            onChange: e => setBillData(prev => ({\n              ...prev,\n              paidBy: e.target.value\n            })),\n            required: true,\n            className: \"select-input\",\n            disabled: !isOrgMembershipsLoaded || !activeMembers.length,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: !isOrgMembershipsLoaded ? 'Loading members...' : 'Select who paid'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), activeMembers.map(member => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: member.id,\n              children: [member.name, \" (\", member.role, \")\"]\n            }, member.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"description\",\n          value: billData.description,\n          onChange: e => setBillData(prev => ({\n            ...prev,\n            description: e.target.value\n          })),\n          required: true,\n          className: \"text-input\",\n          placeholder: \"What was this expense for?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"amount\",\n          value: billData.amount,\n          onChange: e => setBillData(prev => ({\n            ...prev,\n            amount: e.target.value\n          })),\n          required: true,\n          className: \"text-input\",\n          placeholder: \"How much was spent?\",\n          min: \"0\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"date\",\n          value: billData.date,\n          onChange: e => setBillData(prev => ({\n            ...prev,\n            date: e.target.value\n          })),\n          required: true,\n          className: \"date-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        disabled: !isOrgMembershipsLoaded || !selectedOrgId || !activeMembers.length || isSubmitting,\n        children: isSubmitting ? 'Adding...' : 'Add Bill'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n};\n_s(AddBill, \"aGJTaf6wXJJ0l+Kdrurx6tvRg2g=\", false, function () {\n  return [useNavigate, useUser, useOrganizationList, useOrganization];\n});\n_c = AddBill;\nexport default AddBill;\nvar _c;\n$RefreshReg$(_c, \"AddBill\");","map":{"version":3,"names":["useOrganization","useOrganizationList","useUser","React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","userMembershipsParams","userMemberships","infinite","keepPreviousData","orgMembersParams","memberships","includePublicUserData","AddBill","_s","_memberships$data","navigate","user","isLoaded","isOrgListLoaded","setActive","selectedOrgId","setSelectedOrgId","showPopup","setShowPopup","isSubmitting","setIsSubmitting","billData","setBillData","description","amount","selectedOrg","paidBy","date","Date","toISOString","split","isOrgMembershipsLoaded","organizationId","handleGroupChange","e","newOrgId","target","value","prev","organization","data","console","log","handleSubmit","preventDefault","splitWithUsers","members","activeMembers","map","member","user_id","id","name","share_amount","parseFloat","length","share_percentage","status","total_members","organization_id","paid_by_user_id","split_with_users","split_type","currency","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","Error","message","setTimeout","error","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","organizations","membership","role","onClick","style","marginTop","userData","publicUserData","isCurrentUser","userId","displayName","firstName","lastName","identifier","emailAddress","onSubmit","htmlFor","onChange","required","org","disabled","type","placeholder","min","step","_c","$RefreshReg$"],"sources":["C:/Users/shaur/OneDrive/Desktop/AiProject/my-react-app/src/components/AddBill.jsx"],"sourcesContent":["import { useOrganization, useOrganizationList, useUser } from '@clerk/clerk-react';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AddBill.css';\n\nconst userMembershipsParams = {\n  userMemberships: {\n    infinite: true,\n    keepPreviousData: true,\n  },\n};\n\nconst orgMembersParams = {\n  memberships: {\n    infinite: true,\n    includePublicUserData: true,\n    keepPreviousData: true,\n  },\n};\n\nconst AddBill = () => {\n  const navigate = useNavigate();\n  const { user } = useUser();\n  const { isLoaded: isOrgListLoaded, userMemberships, setActive } = useOrganizationList(userMembershipsParams);\n  const [selectedOrgId, setSelectedOrgId] = useState('');\n  const [showPopup, setShowPopup] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  const [billData, setBillData] = useState({\n    description: '',\n    amount: '',\n    selectedOrg: '',\n    paidBy: '',\n    date: new Date().toISOString().split('T')[0],\n  });\n\n  // Get organization details and members for the selected organization\n  const { memberships, isLoaded: isOrgMembershipsLoaded } = useOrganization({\n    memberships: orgMembersParams.memberships,\n    organizationId: selectedOrgId\n  });\n\n  // Handle organization selection\n  const handleGroupChange = async (e) => {\n    const newOrgId = e.target.value;\n    setSelectedOrgId(newOrgId);\n    setBillData(prev => ({ ...prev, selectedOrg: newOrgId, paidBy: '' }));\n    \n    if (newOrgId) {\n      // Set the active organization to trigger member fetch\n      await setActive({ organization: newOrgId });\n    }\n  };\n\n  // Debug logging for member data\n  useEffect(() => {\n    if (isOrgMembershipsLoaded && memberships?.data) {\n      console.log('Current Organization:', selectedOrgId);\n      console.log('Organization Members:', memberships.data);\n    }\n  }, [isOrgMembershipsLoaded, memberships?.data, selectedOrgId]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      // Format members data for split\n      const splitWithUsers = {\n        members: activeMembers.map(member => ({\n          user_id: member.id,\n          name: member.name,\n          share_amount: parseFloat(billData.amount) / activeMembers.length,\n          share_percentage: 100 / activeMembers.length,\n          status: \"pending\"\n        })),\n        total_members: activeMembers.length\n      };\n      \n      // Debug log\n      console.log('Submitting bill with data:', {\n        description: billData.description,\n        amount: billData.amount,\n        date: billData.date,\n        organization_id: selectedOrgId,\n        paid_by_user_id: billData.paidBy,\n        split_with_users: splitWithUsers,\n        split_type: 'equal',\n        currency: 'USD'\n      });\n\n      const response = await fetch('http://localhost:3001/api/bills', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          description: billData.description,\n          amount: parseFloat(billData.amount),\n          date: billData.date,\n          organization_id: selectedOrgId,\n          paid_by_user_id: billData.paidBy,\n          split_with_users: splitWithUsers,\n          split_type: 'equal',\n          currency: 'USD'\n        }),\n      });\n\n      const responseData = await response.json();\n      console.log('Server response:', responseData);\n\n      if (!response.ok) {\n        throw new Error(responseData.message || 'Failed to save bill');\n      }\n\n      // Show success popup\n      setShowPopup(true);\n      \n      // Reset form\n      setBillData({\n        description: '',\n        amount: '',\n        selectedOrg: '',\n        paidBy: '',\n        date: new Date().toISOString().split('T')[0],\n      });\n      setSelectedOrgId('');\n\n      // Hide popup after 3 seconds\n      setTimeout(() => {\n        setShowPopup(false);\n      }, 3000);\n\n    } catch (error) {\n      console.error('Error saving bill:', error);\n      alert(error.message || 'Failed to save bill. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Show loading state while fetching organizations\n  if (!isOrgListLoaded) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\">Loading your groups...</div>\n      </div>\n    );\n  }\n\n  // Show message if no organizations data is available\n  if (!userMemberships?.data) {\n    return (\n      <div className=\"add-bill-container\">\n        <h1>Add a bill</h1>\n        <p className=\"subtitle\">Loading your groups...</p>\n      </div>\n    );\n  }\n\n  // Get list of organizations where user is a member\n  const organizations = userMemberships.data.map(membership => ({\n    id: membership.organization.id,\n    name: membership.organization.name,\n    role: membership.role\n  }));\n\n  // If user has no organizations\n  if (organizations.length === 0) {\n    return (\n      <div className=\"add-bill-container\">\n        <h1>Add a bill</h1>\n        <p className=\"subtitle\">You need to be part of a group to add bills.</p>\n        <div className=\"error-message\">Please create or join a group first.</div>\n        <button \n          className=\"action-btn\"\n          onClick={() => navigate('/create-group')}\n          style={{ marginTop: '1rem' }}\n        >\n          Create New Group\n        </button>\n      </div>\n    );\n  }\n\n  // Get active members for the selected organization\n  const activeMembers = memberships?.data\n    ?.map(member => {\n      const userData = member.publicUserData;\n      const isCurrentUser = userData.userId === user?.id;\n      let displayName;\n\n      if (isCurrentUser) {\n        displayName = 'You';\n      } else if (userData.firstName && userData.lastName) {\n        displayName = `${userData.firstName} ${userData.lastName}`;\n      } else if (userData.firstName) {\n        displayName = userData.firstName;\n      } else {\n        displayName = userData.identifier || userData.emailAddress || 'Unknown Member';\n      }\n\n      return {\n        id: userData.userId,\n        name: displayName,\n        role: member.role,\n        isCurrentUser\n      };\n    }) || [];\n\n  return (\n    <div className=\"add-bill-container\">\n      {showPopup && (\n        <div className=\"success-popup\">\n          <div className=\"popup-content\">\n            <span className=\"success-icon\">✓</span>\n            <p>Expense added successfully!</p>\n          </div>\n        </div>\n      )}\n      \n      <h1>Add a bill</h1>\n      <p className=\"subtitle\">Add a new bill to track expenses</p>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"organization\">Select Group</label>\n          <select\n            id=\"organization\"\n            value={selectedOrgId}\n            onChange={handleGroupChange}\n            required\n            className=\"select-input\"\n          >\n            <option value=\"\">Select a group</option>\n            {organizations.map((org) => (\n              <option key={org.id} value={org.id}>\n                {org.name} ({org.role})\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {selectedOrgId && (\n          <>\n            <div className=\"members-list\">\n              <h3>Group Members</h3>\n              {!isOrgMembershipsLoaded ? (\n                <div className=\"loading-message\">Loading members...</div>\n              ) : activeMembers.length === 0 ? (\n                <div className=\"error-message\">No members found in this group</div>\n              ) : (\n                activeMembers.map((member) => (\n                  <div key={member.id} className=\"member-item\">\n                    <span className=\"member-name\">{member.name}</span>\n                    <span className=\"member-role\">{member.role}</span>\n                  </div>\n                ))\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"paidBy\">Who paid?</label>\n              <select\n                id=\"paidBy\"\n                value={billData.paidBy}\n                onChange={(e) => setBillData(prev => ({ ...prev, paidBy: e.target.value }))}\n                required\n                className=\"select-input\"\n                disabled={!isOrgMembershipsLoaded || !activeMembers.length}\n              >\n                <option value=\"\">\n                  {!isOrgMembershipsLoaded \n                    ? 'Loading members...' \n                    : 'Select who paid'}\n                </option>\n                {activeMembers.map((member) => (\n                  <option key={member.id} value={member.id}>\n                    {member.name} ({member.role})\n                  </option>\n                ))}\n              </select>\n            </div>\n          </>\n        )}\n\n        <div className=\"form-group\">\n          <label htmlFor=\"description\">Description</label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            value={billData.description}\n            onChange={(e) => setBillData(prev => ({ ...prev, description: e.target.value }))}\n            required\n            className=\"text-input\"\n            placeholder=\"What was this expense for?\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">Amount</label>\n          <input\n            type=\"number\"\n            id=\"amount\"\n            value={billData.amount}\n            onChange={(e) => setBillData(prev => ({ ...prev, amount: e.target.value }))}\n            required\n            className=\"text-input\"\n            placeholder=\"How much was spent?\"\n            min=\"0\"\n            step=\"0.01\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"date\">Date</label>\n          <input\n            type=\"date\"\n            id=\"date\"\n            value={billData.date}\n            onChange={(e) => setBillData(prev => ({ ...prev, date: e.target.value }))}\n            required\n            className=\"date-input\"\n          />\n        </div>\n\n        <button \n          type=\"submit\" \n          className=\"submit-btn\"\n          disabled={!isOrgMembershipsLoaded || !selectedOrgId || !activeMembers.length || isSubmitting}\n        >\n          {isSubmitting ? 'Adding...' : 'Add Bill'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddBill;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}