{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaur\\\\OneDrive\\\\Desktop\\\\AiProject\\\\my-react-app\\\\src\\\\components\\\\GroupDetails.jsx\",\n  _s = $RefreshSig$();\nimport { useOrganization, useOrganizationList, useUser } from '@clerk/clerk-react';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './GroupDetails.css';\n\n// Profile Icon Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileIcon = ({\n  firstName,\n  lastName\n}) => {\n  const initials = `${(firstName === null || firstName === void 0 ? void 0 : firstName[0]) || ''}${(lastName === null || lastName === void 0 ? void 0 : lastName[0]) || ''}`.toUpperCase();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-icon\",\n    children: initials\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = ProfileIcon;\nconst GroupDetails = () => {\n  _s();\n  var _memberships$data, _organization$private;\n  const {\n    orgId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useUser();\n  const {\n    setActive\n  } = useOrganizationList();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [expenses, setExpenses] = useState([]);\n  const {\n    organization,\n    isLoaded: isOrgLoaded,\n    memberships\n  } = useOrganization({\n    organizationId: orgId,\n    memberships: {\n      infinite: true,\n      includePublicUserData: true\n    }\n  });\n  useEffect(() => {\n    const initializeGroup = async () => {\n      try {\n        if (!orgId) return;\n\n        // Set the active organization\n        await setActive({\n          organization: orgId\n        });\n\n        // Fetch expenses for the group\n        const idPart = orgId.includes('/') ? orgId.split('/').pop() : orgId;\n        const cleanOrgId = idPart.replace(/^org_/, '').replace(/[^a-zA-Z0-9]/g, '');\n        const response = await fetch(`http://localhost:3005/api/groups/${cleanOrgId}/member-details`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch group expenses');\n        }\n        const data = await response.json();\n        setExpenses(Array.isArray(data) ? data : []);\n      } catch (err) {\n        console.error('Error initializing group:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (orgId) {\n      initializeGroup();\n    }\n  }, [orgId, setActive]);\n  if (!isOrgLoaded || loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"Loading group details...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n  if (!organization) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Group not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The group you're looking for doesn't exist or you don't have access to it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-btn\",\n        onClick: () => navigate('/expenses'),\n        children: \"Back to Groups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n  const activeMembers = (memberships === null || memberships === void 0 ? void 0 : (_memberships$data = memberships.data) === null || _memberships$data === void 0 ? void 0 : _memberships$data.filter(member => member.status === 'active')) || [];\n  const createdDate = new Date(organization.createdAt).toLocaleDateString();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"group-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: organization.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"description\",\n        children: ((_organization$private = organization.privateMetadata) === null || _organization$private === void 0 ? void 0 : _organization$private.description) || 'No description provided'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-meta\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Created: \", createdDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Active Members: \", activeMembers.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"members-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Members (\", activeMembers.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"members-list\",\n        children: activeMembers.map(member => {\n          var _member$publicUserDat, _member$publicUserDat2, _member$publicUserDat3, _member$publicUserDat4;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"member-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"member-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: ((_member$publicUserDat = member.publicUserData) === null || _member$publicUserDat === void 0 ? void 0 : _member$publicUserDat.imageUrl) || '/default-avatar.png',\n                alt: ((_member$publicUserDat2 = member.publicUserData) === null || _member$publicUserDat2 === void 0 ? void 0 : _member$publicUserDat2.identifier) || 'Member',\n                className: \"member-avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"member-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"member-name\",\n                  children: [(_member$publicUserDat3 = member.publicUserData) === null || _member$publicUserDat3 === void 0 ? void 0 : _member$publicUserDat3.identifier, ((_member$publicUserDat4 = member.publicUserData) === null || _member$publicUserDat4 === void 0 ? void 0 : _member$publicUserDat4.userId) === (user === null || user === void 0 ? void 0 : user.id) && ' (You)']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"member-role\",\n                  children: member.role\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"member-status active\",\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, member.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"members-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Group Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense-stats\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Total Expenses: \", expenses.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), expenses.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-expenses\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No expenses found for this group.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-btn\",\n          onClick: () => navigate('/add-bill'),\n          children: \"Add First Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"members-grid\",\n        children: expenses.map(expense => {\n          var _payer$publicUserData, _payer$publicUserData2;\n          const payer = activeMembers.find(m => m.publicUserData.userId === expense.paid_by_user_id);\n          const firstName = (payer === null || payer === void 0 ? void 0 : (_payer$publicUserData = payer.publicUserData) === null || _payer$publicUserData === void 0 ? void 0 : _payer$publicUserData.firstName) || '';\n          const lastName = (payer === null || payer === void 0 ? void 0 : (_payer$publicUserData2 = payer.publicUserData) === null || _payer$publicUserData2 === void 0 ? void 0 : _payer$publicUserData2.lastName) || '';\n          const payerName = payer ? `${firstName} ${lastName}`.trim() || payer.publicUserData.identifier : 'Unknown';\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"member-card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"member-info\",\n              children: [/*#__PURE__*/_jsxDEV(ProfileIcon, {\n                firstName: firstName,\n                lastName: lastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"member-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: expense.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"member-meta\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"member-role\",\n                    children: [\"\\u20B9\", parseFloat(expense.amount).toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"member-joined\",\n                    children: new Date(expense.date).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"member-email\",\n                  children: [\"Paid by: \", payerName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this)\n          }, expense.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-btn\",\n        onClick: () => navigate('/add-bill'),\n        children: \"Add Bill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-btn\",\n        onClick: () => navigate('/expenses'),\n        children: \"Back to Groups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupDetails, \"sG8T89JRAcDm3JnMbEX9rOxdoKI=\", false, function () {\n  return [useParams, useNavigate, useUser, useOrganizationList, useOrganization];\n});\n_c2 = GroupDetails;\nexport default GroupDetails;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProfileIcon\");\n$RefreshReg$(_c2, \"GroupDetails\");","map":{"version":3,"names":["useOrganization","useOrganizationList","useUser","React","useEffect","useState","useNavigate","useParams","jsxDEV","_jsxDEV","ProfileIcon","firstName","lastName","initials","toUpperCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","GroupDetails","_s","_memberships$data","_organization$private","orgId","navigate","user","setActive","loading","setLoading","error","setError","expenses","setExpenses","organization","isLoaded","isOrgLoaded","memberships","organizationId","infinite","includePublicUserData","initializeGroup","idPart","includes","split","pop","cleanOrgId","replace","response","fetch","ok","Error","data","json","Array","isArray","err","console","message","onClick","activeMembers","filter","member","status","createdDate","Date","createdAt","toLocaleDateString","name","privateMetadata","description","length","map","_member$publicUserDat","_member$publicUserDat2","_member$publicUserDat3","_member$publicUserDat4","src","publicUserData","imageUrl","alt","identifier","userId","id","role","expense","_payer$publicUserData","_payer$publicUserData2","payer","find","m","paid_by_user_id","payerName","trim","parseFloat","amount","toFixed","date","_c2","$RefreshReg$"],"sources":["C:/Users/shaur/OneDrive/Desktop/AiProject/my-react-app/src/components/GroupDetails.jsx"],"sourcesContent":["import { useOrganization, useOrganizationList, useUser } from '@clerk/clerk-react';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './GroupDetails.css';\n\n// Profile Icon Component\nconst ProfileIcon = ({ firstName, lastName }) => {\n  const initials = `${firstName?.[0] || ''}${lastName?.[0] || ''}`.toUpperCase();\n  return (\n    <div className=\"profile-icon\">\n      {initials}\n    </div>\n  );\n};\n\nconst GroupDetails = () => {\n  const { orgId } = useParams();\n  const navigate = useNavigate();\n  const { user } = useUser();\n  const { setActive } = useOrganizationList();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [expenses, setExpenses] = useState([]);\n\n  const { organization, isLoaded: isOrgLoaded, memberships } = useOrganization({\n    organizationId: orgId,\n    memberships: {\n      infinite: true,\n      includePublicUserData: true\n    }\n  });\n\n  useEffect(() => {\n    const initializeGroup = async () => {\n      try {\n        if (!orgId) return;\n        \n        // Set the active organization\n        await setActive({ organization: orgId });\n        \n        // Fetch expenses for the group\n        const idPart = orgId.includes('/') ? orgId.split('/').pop() : orgId;\n        const cleanOrgId = idPart.replace(/^org_/, '').replace(/[^a-zA-Z0-9]/g, '');\n        \n        const response = await fetch(`http://localhost:3005/api/groups/${cleanOrgId}/member-details`);\n        \n        if (!response.ok) {\n          throw new Error('Failed to fetch group expenses');\n        }\n        \n        const data = await response.json();\n        setExpenses(Array.isArray(data) ? data : []);\n      } catch (err) {\n        console.error('Error initializing group:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (orgId) {\n      initializeGroup();\n    }\n  }, [orgId, setActive]);\n\n  if (!isOrgLoaded || loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\">Loading group details...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"error-container\">\n        <h2>Error</h2>\n        <p>{error}</p>\n      </div>\n    );\n  }\n\n  if (!organization) {\n    return (\n      <div className=\"error-container\">\n        <h2>Group not found</h2>\n        <p>The group you're looking for doesn't exist or you don't have access to it.</p>\n        <button \n          className=\"action-btn\"\n          onClick={() => navigate('/expenses')}\n        >\n          Back to Groups\n        </button>\n      </div>\n    );\n  }\n\n  const activeMembers = memberships?.data?.filter(member => member.status === 'active') || [];\n  const createdDate = new Date(organization.createdAt).toLocaleDateString();\n\n  return (\n    <div className=\"group-page-container\">\n      <header className=\"group-header\">\n        <h1>{organization.name}</h1>\n        <p className=\"description\">\n          {organization.privateMetadata?.description || 'No description provided'}\n        </p>\n        <div className=\"group-meta\">\n          <span>Created: {createdDate}</span>\n          <span>Active Members: {activeMembers.length}</span>\n        </div>\n      </header>\n\n      <section className=\"members-section\">\n        <h2>Members ({activeMembers.length})</h2>\n        <div className=\"members-list\">\n          {activeMembers.map((member) => (\n            <div key={member.id} className=\"member-card\">\n              <div className=\"member-info\">\n                <img \n                  src={member.publicUserData?.imageUrl || '/default-avatar.png'} \n                  alt={member.publicUserData?.identifier || 'Member'} \n                  className=\"member-avatar\"\n                />\n                <div className=\"member-details\">\n                  <span className=\"member-name\">\n                    {member.publicUserData?.identifier}\n                    {member.publicUserData?.userId === user?.id && ' (You)'}\n                  </span>\n                  <span className=\"member-role\">{member.role}</span>\n                </div>\n              </div>\n              <span className=\"member-status active\">Active</span>\n            </div>\n          ))}\n        </div>\n      </section>\n\n      <section className=\"members-section\">\n        <div className=\"section-header\">\n          <h2>Group Expenses</h2>\n          <div className=\"expense-stats\">\n            <span>Total Expenses: {expenses.length}</span>\n          </div>\n        </div>\n        \n        {expenses.length === 0 ? (\n          <div className=\"no-expenses\">\n            <p>No expenses found for this group.</p>\n            <button \n              className=\"action-btn\"\n              onClick={() => navigate('/add-bill')}\n            >\n              Add First Expense\n            </button>\n          </div>\n        ) : (\n          <div className=\"members-grid\">\n            {expenses.map((expense) => {\n              const payer = activeMembers.find(m => m.publicUserData.userId === expense.paid_by_user_id);\n              const firstName = payer?.publicUserData?.firstName || '';\n              const lastName = payer?.publicUserData?.lastName || '';\n              const payerName = payer ? \n                `${firstName} ${lastName}`.trim() || payer.publicUserData.identifier : \n                'Unknown';\n\n              return (\n                <div key={expense.id} className=\"member-card\">\n                  <div className=\"member-info\">\n                    <ProfileIcon firstName={firstName} lastName={lastName} />\n                    <div className=\"member-details\">\n                      <h3>{expense.description}</h3>\n                      <div className=\"member-meta\">\n                        <span className=\"member-role\">₹{parseFloat(expense.amount).toFixed(2)}</span>\n                        <span className=\"member-joined\">{new Date(expense.date).toLocaleDateString()}</span>\n                      </div>\n                      <span className=\"member-email\">Paid by: {payerName}</span>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </section>\n\n      <div className=\"group-actions\">\n        <button \n          className=\"action-btn\"\n          onClick={() => navigate('/add-bill')}\n        >\n          Add Bill\n        </button>\n        <button \n          className=\"action-btn\"\n          onClick={() => navigate('/expenses')}\n        >\n          Back to Groups\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default GroupDetails; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}