{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaur\\\\OneDrive\\\\Desktop\\\\AiProject\\\\my-react-app\\\\src\\\\components\\\\ExpenseList.jsx\";\nimport React from 'react';\nimport './ExpenseList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseList = () => {\n  // Sample data - replace with your actual data fetching logic\n  const expenses = [{\n    id: 1,\n    description: 'Groceries',\n    amount: 50.00,\n    paidBy: 'John',\n    date: '2024-03-15'\n  }, {\n    id: 2,\n    description: 'Utilities',\n    amount: 100.00,\n    paidBy: 'Sarah',\n    date: '2024-03-14'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expense-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-list\",\n      children: expenses.map(expense => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: expense.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Paid by \", expense.paidBy]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"expense-date\",\n            children: expense.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense-amount\",\n          children: [\"$\", expense.amount.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, expense.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = ExpenseList;\nexport default ExpenseList;\nvar _c;\n$RefreshReg$(_c, \"ExpenseList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ExpenseList","expenses","id","description","amount","paidBy","date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","expense","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/shaur/OneDrive/Desktop/AiProject/my-react-app/src/components/ExpenseList.jsx"],"sourcesContent":["import React from 'react';\nimport './ExpenseList.css';\n\nconst ExpenseList = () => {\n  // Sample data - replace with your actual data fetching logic\n  const expenses = [\n    {\n      id: 1,\n      description: 'Groceries',\n      amount: 50.00,\n      paidBy: 'John',\n      date: '2024-03-15',\n    },\n    {\n      id: 2,\n      description: 'Utilities',\n      amount: 100.00,\n      paidBy: 'Sarah',\n      date: '2024-03-14',\n    },\n  ];\n\n  return (\n    <div className=\"expense-list-container\">\n      <h1>Expenses</h1>\n      <div className=\"expense-list\">\n        {expenses.map((expense) => (\n          <div key={expense.id} className=\"expense-item\">\n            <div className=\"expense-info\">\n              <h3>{expense.description}</h3>\n              <p>Paid by {expense.paidBy}</p>\n              <p className=\"expense-date\">{expense.date}</p>\n            </div>\n            <div className=\"expense-amount\">\n              ${expense.amount.toFixed(2)}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ExpenseList; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB;EACA,MAAMC,QAAQ,GAAG,CACf;IACEC,EAAE,EAAE,CAAC;IACLC,WAAW,EAAE,WAAW;IACxBC,MAAM,EAAE,KAAK;IACbC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,EAAE,EAAE,CAAC;IACLC,WAAW,EAAE,WAAW;IACxBC,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE,OAAO;IACfC,IAAI,EAAE;EACR,CAAC,CACF;EAED,oBACEP,OAAA;IAAKQ,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCT,OAAA;MAAAS,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBb,OAAA;MAAKQ,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BP,QAAQ,CAACY,GAAG,CAAEC,OAAO,iBACpBf,OAAA;QAAsBQ,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC5CT,OAAA;UAAKQ,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BT,OAAA;YAAAS,QAAA,EAAKM,OAAO,CAACX;UAAW;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9Bb,OAAA;YAAAS,QAAA,GAAG,UAAQ,EAACM,OAAO,CAACT,MAAM;UAAA;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/Bb,OAAA;YAAGQ,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAEM,OAAO,CAACR;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC,eACNb,OAAA;UAAKQ,SAAS,EAAC,gBAAgB;UAAAC,QAAA,GAAC,GAC7B,EAACM,OAAO,CAACV,MAAM,CAACW,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA,GAREE,OAAO,CAACZ,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASf,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACI,EAAA,GAtCIhB,WAAW;AAwCjB,eAAeA,WAAW;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}