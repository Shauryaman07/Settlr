{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/shaur/OneDrive/Desktop/AiProject/my-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"initialState\", \"children\"];\nimport \"../chunk-XTU7I5IS.js\";\nimport { isLegacyFrontendApiKey, isPublishableKey } from \"@clerk/shared/keys\";\nimport React from \"react\";\nimport { multipleClerkProvidersError } from \"../errors\";\nimport { __internal__setErrorThrowerOptions, errorThrower, withMaxAllowedInstancesGuard } from \"../utils\";\nimport { ClerkContextProvider } from \"./ClerkContextProvider\";\nimport { StructureContext, StructureContextStates } from \"./StructureContext\";\n__internal__setErrorThrowerOptions({\n  packageName: \"@clerk/clerk-react\"\n});\nfunction ClerkProviderBase(props) {\n  const {\n      initialState,\n      children\n    } = props,\n    restIsomorphicClerkOptions = _objectWithoutProperties(props, _excluded);\n  const {\n    frontendApi = \"\",\n    publishableKey = \"\",\n    Clerk: userInitialisedClerk\n  } = restIsomorphicClerkOptions;\n  if (!userInitialisedClerk) {\n    if (!publishableKey && !frontendApi) {\n      errorThrower.throwMissingPublishableKeyError();\n    } else if (publishableKey && !isPublishableKey(publishableKey)) {\n      errorThrower.throwInvalidPublishableKeyError({\n        key: publishableKey\n      });\n    } else if (!publishableKey && frontendApi && !isLegacyFrontendApiKey(frontendApi)) {\n      errorThrower.throwInvalidFrontendApiError({\n        key: frontendApi\n      });\n    }\n  }\n  return /* @__PURE__ */React.createElement(StructureContext.Provider, {\n    value: StructureContextStates.noGuarantees\n  }, /* @__PURE__ */React.createElement(ClerkContextProvider, {\n    initialState,\n    isomorphicClerkOptions: restIsomorphicClerkOptions\n  }, children));\n}\nconst ClerkProvider = withMaxAllowedInstancesGuard(ClerkProviderBase, \"ClerkProvider\", multipleClerkProvidersError);\nClerkProvider.displayName = \"ClerkProvider\";\nexport { ClerkProvider, __internal__setErrorThrowerOptions };","map":{"version":3,"names":["isLegacyFrontendApiKey","isPublishableKey","React","multipleClerkProvidersError","__internal__setErrorThrowerOptions","errorThrower","withMaxAllowedInstancesGuard","ClerkContextProvider","StructureContext","StructureContextStates","packageName","ClerkProviderBase","props","initialState","children","restIsomorphicClerkOptions","_objectWithoutProperties","_excluded","frontendApi","publishableKey","Clerk","userInitialisedClerk","throwMissingPublishableKeyError","throwInvalidPublishableKeyError","key","throwInvalidFrontendApiError","createElement","Provider","value","noGuarantees","isomorphicClerkOptions","ClerkProvider","displayName"],"sources":["C:\\Users\\shaur\\OneDrive\\Desktop\\AiProject\\my-react-app\\node_modules\\@clerk\\clerk-react\\src\\contexts\\ClerkProvider.tsx"],"sourcesContent":["import { isLegacyFrontendApiKey, isPublishableKey } from '@clerk/shared/keys';\nimport type { InitialState } from '@clerk/types';\nimport React from 'react';\n\nimport { multipleClerkProvidersError } from '../errors';\nimport type { IsomorphicClerkOptions } from '../types';\nimport { __internal__setErrorThrowerOptions, errorThrower, withMaxAllowedInstancesGuard } from '../utils';\nimport { ClerkContextProvider } from './ClerkContextProvider';\nimport { StructureContext, StructureContextStates } from './StructureContext';\n\n__internal__setErrorThrowerOptions({\n  packageName: '@clerk/clerk-react',\n});\n\nexport type ClerkProviderProps = IsomorphicClerkOptions & {\n  children: React.ReactNode;\n  initialState?: InitialState;\n};\n\nfunction ClerkProviderBase(props: ClerkProviderProps): JSX.Element {\n  const { initialState, children, ...restIsomorphicClerkOptions } = props;\n  const { frontendApi = '', publishableKey = '', Clerk: userInitialisedClerk } = restIsomorphicClerkOptions;\n\n  if (!userInitialisedClerk) {\n    if (!publishableKey && !frontendApi) {\n      errorThrower.throwMissingPublishableKeyError();\n    } else if (publishableKey && !isPublishableKey(publishableKey)) {\n      errorThrower.throwInvalidPublishableKeyError({ key: publishableKey });\n    } else if (!publishableKey && frontendApi && !isLegacyFrontendApiKey(frontendApi)) {\n      errorThrower.throwInvalidFrontendApiError({ key: frontendApi });\n    }\n  }\n\n  return (\n    <StructureContext.Provider value={StructureContextStates.noGuarantees}>\n      <ClerkContextProvider\n        initialState={initialState}\n        isomorphicClerkOptions={restIsomorphicClerkOptions}\n      >\n        {children}\n      </ClerkContextProvider>\n    </StructureContext.Provider>\n  );\n}\n\nconst ClerkProvider = withMaxAllowedInstancesGuard(ClerkProviderBase, 'ClerkProvider', multipleClerkProvidersError);\n\nClerkProvider.displayName = 'ClerkProvider';\n\nexport { ClerkProvider, __internal__setErrorThrowerOptions };\n"],"mappings":";;;AAAA,SAASA,sBAAA,EAAwBC,gBAAA,QAAwB;AAEzD,OAAOC,KAAA,MAAW;AAElB,SAASC,2BAAA,QAAmC;AAE5C,SAASC,kCAAA,EAAoCC,YAAA,EAAcC,4BAAA,QAAoC;AAC/F,SAASC,oBAAA,QAA4B;AACrC,SAASC,gBAAA,EAAkBC,sBAAA,QAA8B;AAEzDL,kCAAA,CAAmC;EACjCM,WAAA,EAAa;AACf,CAAC;AAOD,SAASC,kBAAkBC,KAAA,EAAwC;EACjE,MAAM;MAAEC,YAAA;MAAcC;IAAwC,IAAIF,KAAA;IAA/BG,0BAAA,GAAAC,wBAAA,CAA+BJ,KAAA,EAAAK,SAAA;EAClE,MAAM;IAAEC,WAAA,GAAc;IAAIC,cAAA,GAAiB;IAAIC,KAAA,EAAOC;EAAqB,IAAIN,0BAAA;EAE/E,IAAI,CAACM,oBAAA,EAAsB;IACzB,IAAI,CAACF,cAAA,IAAkB,CAACD,WAAA,EAAa;MACnCb,YAAA,CAAaiB,+BAAA,CAAgC;IAC/C,WAAWH,cAAA,IAAkB,CAAClB,gBAAA,CAAiBkB,cAAc,GAAG;MAC9Dd,YAAA,CAAakB,+BAAA,CAAgC;QAAEC,GAAA,EAAKL;MAAe,CAAC;IACtE,WAAW,CAACA,cAAA,IAAkBD,WAAA,IAAe,CAAClB,sBAAA,CAAuBkB,WAAW,GAAG;MACjFb,YAAA,CAAaoB,4BAAA,CAA6B;QAAED,GAAA,EAAKN;MAAY,CAAC;IAChE;EACF;EAEA,OACE,eAAAhB,KAAA,CAAAwB,aAAA,CAAClB,gBAAA,CAAiBmB,QAAA,EAAjB;IAA0BC,KAAA,EAAOnB,sBAAA,CAAuBoB;EAAA,GACvD,eAAA3B,KAAA,CAAAwB,aAAA,CAACnB,oBAAA;IACCM,YAAA;IACAiB,sBAAA,EAAwBf;EAAA,GAEvBD,QACH,CACF;AAEJ;AAEA,MAAMiB,aAAA,GAAgBzB,4BAAA,CAA6BK,iBAAA,EAAmB,iBAAiBR,2BAA2B;AAElH4B,aAAA,CAAcC,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}